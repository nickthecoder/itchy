Jame is out of date, need to rebuild for win32 and i386 and ARM??
    Compile and test using windows.
    Compile on raspPi?

What's Next
===========

Launch and launch.bat to try to set the current directory
    make Launcher.main treat the argument in two ways
        As a name of a folder in "resources" i.e. launch rain
        As a fully qualified path of the resources file. launch /home/nick/projects/itchy/resources/rain.xml
    This combo should allow launcher to be launched from anywhere, and also for a game to reside anywhere,
        not in the same dir as Itchy.
        Get Thrust to run via "launch" without the resource symlinks to itchy.
            Need thrusts jar file to be in a lib directory within its resources, and for the jar to be loaded
            after java has started.
   Maybe all itchy resource files should end in .itchy. So they can be double clicked!
        Or maybe they should be zip files? Nah, the icons won't work, nor the .jar file, and it would be annoying to zip it.
    Scripts and templates should be relative to the current directory, not relative to the game's resources.
        Test rain from its own little resources directory.


When getting a property value from a script, if it doesn't return a valid value, report in stderr, and
    return a reasonable default. "", 0, 0.0, black.

Bug : It seems that the editor is using the REAL behaviour for some text buttons (easy,medium,hard),
    when it should be using a SceneBehvaiour???
    No, I think the old actors haven't been destroyed, and are picking up on mouse clicks.
        Possible just the layers, and their mouse listeners.
    Is this also what's causing ./launch tetra --editor spewing out lots of stack traces?

Can Game own all of the Actors? And all of the tags?
    This would prevent weird error when the actors aren't killed when moving from game to editor.

CostumeProperties
    Use auto update components, so we don't have the fragile "for" loop in onOk.
    Create the object when the name is set, then in onOk, set the className (which 
        will create another version), and then copy the attributes over.
    
Fix frame rate problems at the start of the game.

"include" javascript function, which includes another script file.

Check that Add Scene doesn't rename.

Check that a broken script doesn't cause problems :
    Costume Properties
    Behaviour in editor
    Behaviour in designer
    SceneBehaviour in editor
    SceneBehaviour in designer
    Game


Rain : reset high scores

Game.getPreferences to use a better key than the current game's class name, as they could easily be Game
    or ScriptedGame.
    Instead use the name of the resources directory, prefixed with uk.co.nickthecoder.itchy.
    A subclass of Game can override this.

Bugs
====

One of the animation profiles shows that the NumericAnimation isn't quite right.

When a window has no focusable components, then it recurses till the stack explodes.

Popup windows dont center themselves when window grows. Should they?

On Remove, there is no check that the resource isn't being used by something else.
    Easy pose, animation, sound..., but tricky for costume, as they could be used in any scene
    
Renaming a costume will cause scenes that use it to fail.

Costumes are updated even when cancel is pressed (need to COPY the costume?)

Later
=====


Bucket to be more transparent
Water looks naff

The stars on Drunk Invaders backgrounds should have more variation (alpha and slight colour - maybe size too).

Component : Override all rules. Currently only Font can be overridden.  
    Allow to be reset to default (i.e. be restyled). 

Icons on each editor tab and also on the CostumeEditor for each event type (String,Pose,Sound etc).

Create a GenericGame, which can load arbitrary resources (for a simple start to a game)
    Started (called Launcher).

Create a game which uses the GUI        
    The Rules object needs to be on Game, its probably on Itchy right now.

Try it on a RaspPi
    Need to compile Jame for the ARM processor!

The Behaviours should have the tags, because its them that have the Interface.
Also, I could change the behaviour, and the tags would magically vanish (without the "removeAll"!
Don't use tags for "active".

Container.render should get the NinePatches to render directly onto the gc, not via a temp surface.
RenderableInterface is rubbish. NinePatches should be told where and how large to draw themselves
   (assuming that they can render onto a existing surface rather than needing a new surface).


Replace crufty render and render2 methods with the concept of a Graphics Context.
To scroll, a sub-layer, push the context, alter its mapping, call the childrens render,
then pop the context.

Appearance optimised so that it doesn't need to re-render the appearance to get the worldRectangle
    Maybe calculate the maximum rectangle for the Pose for any rotation
    When asked for its worldRect, if cached, returned that, other wise if direction == 0, return pose.rectangle * scale, otherwise return maximum rect * scale   


