Undo/Redo

    Trouble with null/blank values for colorize.

    Cut actor
    Classname changes
    Paste an Actor
    Any other fields which don't use propertiesforms    

    Toolbar buttons

Save and restore the tags of paused actors?
    A boolean can turn this behaviour off.

Update the Role.js template to include onAttach

Fluent allowNull and includeAlpha for AbstractProperty and RGBAProperty

When a js file imports another, remember the dependency, so that the dependant classes get re-loaded if the dependecy is reloaded.
    e.g. If Moving.js is changed then Rock.js, Ship.js etc are reloaded.
    Think about circular dependencies. 
    When a script is asked if it needs reloading :
        Create a set of its script and all of its dependencies (recursively)
        Find the latest timestamp
        Check its load timestamp with the latest timestamp, and if its older, then re-load.
        Short-circuit if the 1st level depenencies is empty.

Make the Role interface the actual useful thing i.e. remove as much as possible from AbstractRole.

For JS, remove properties when reloading.
    Nah, just implement properties the same way as Python does it, and get rid of the cruft,
    including the Map interface bodge.

Surface.copy to use setEnableAlpha(false) rather than composite.
    Is there a bug in setAlpha? If not, where is it?

Drunk Invaders doesn't go to next level.

All classes which have fluent API, create a subclass with just the fluent api,
    and leave the main class without the fluent methods???

Allow creation of new Role objects from Javascript i.e. create a ScriptedRole and the script in one go.
    Constructor takes the ScriptedRole, or creates it if undefined.
    Use the same pattern to create View and Stage objects too, so that a TorusView can be created.
    Create TorusView and TorusCollisionStrategy


Bugs
====

BUG: Reloading a SceneBehaviour script causes the properties to double.
    Do Properties like Python scripts do them, removing the buggy, crufty code, including the Map bodge.

TODO
====

Dynamic class loader for game jar files, which live in resources/foo/lib/ or ./lib when outside of itchy's resources directory.

Make Text Costumes real costumes - Don't use the "Text" tool.
    Include font size and colour?
    Thumbnail to include the colour and the text "Abc".
    Don't add a String to the costume when creating it.
    Try to rationalise Actor's constructor - can I force it to have a Costume now?
        Actor(Costume, String poseName = "default" ) i.e. just two constructors.
        If a Pose is found use it, else if a Font is found use that, otherwise use a dummy 1x1 surface, and issue a warning.
    During load - if it finds a "text", then generate a costume which is used by later "text" actors.

Hover over button for tooltips.
    If a component has a tooltip, then for all mousemove events, if inside, tell Game that a tooltip is available.
    Game remembers the time, and the tooltip factory
    Inside tick, if the tooltip delay has passed without any other mouse moves, then tell tooltip factory to create the rootwindow.
    Game destroys the tooltip window on the next mousemove/up/down.
    TooltipFactory interface : public Component createTooltip();
    Create tooltips of Costumes tab - with the name of the costume.
    
Need to allow Makeup appear at any stage in the pipeline from the editor. e.g. a Decoration which should not be rotated with the actor.
Or a clip done at the end.
    A tick box "Advanced" will reveal a Compound Makeup as a table, with the standard items as well as the current Makeup if its not Null. 

Tiled background - instead of a RGBA, specify a Pose, and tile it in a Grid.
    More generic - Create a BackgroundView interface
    RGBABackground
    Tile, BrickH, BrickV, TileH, TileV (spacing can be different to the image size)

Create a Javascript wrapper for View, and use it to implement scrolling on Torus World.
    Will then need to implement a good collision detection too.
        Translate the current object right or left and also up or down, so four tests in total.
        Update, and then use the wrapped collision strategy, which could be brute force or neighbourhood.

Note that these are the same features that the Textured Makeup could use.
    For that matter, there could be a new Makeup called BackgroundMakeup, which places a background behind the actor.
    A Background and Frame would work nicely to create a mug-shot.

There are non-visual Makeups
    Size (makes the appearance the given size without scaling
    Margin as above, but adds a given amount, rather than a set overall size.
    AlterOffset - useful for changing the rotation point.

Texture should use the pose's offsetX,Y as its start point, not 0,0

Explosion and Projectile don't work very well with text - See Gate.collected.

When a costume has a font, it should inclue the colour and size too.
    And alignment?
    Companion would need a fontsize and color attributes???
    Talk should be simpler to use too.

Should Costumes have Makeup? If each jewel is given a Sparkle makeup, does it make sense to apply it to every jewel in the scene?
    No. A diamond costume would specify a standard makeup, which can be overridden if needed.
    Have a reset button to revert to the costume's makeup, or default makeup if it has none.
    Costumes' makeup just like animations - based on events, and can have multiple options picked a random.

Costume editor to have filters on event name and resource type.
    i.e. show all Animations, or show all "death" events, or show all "death" Animations or show everything. 
    Should the filters stay as you flick from one Costume to another - Yes, probably.

Update class diagrams (moved extras classes)

Send to Asul
    package, test on windows. 

EntryBox is firing change events for arrow keys.

Scripted Makeup
    Appearance.getMakeupClassName
    Appearance.createMakeup
    Create Tests

Allow Compound makeups
Glitter Makeup - sprinkle poses randomly. use getpixel.
Decoration - Adds a Pose to a given place relative to the actor's x,y.
Underscore - used for text poses to place a line under the text. Use "_" to create the line,  or Surface.fill. 
    Use it on link text when compound makeup is available.

Cache the results of Makeup on Appearance.
    If we apply Makeup first (do clipping afterwards), then we only re-apply makeup if the pose has changed.
    Don't forget to free the cache when possible.

Test other animations not on the animations test page.
    Clip, heading, heading to, turn to,
    Heading pointer Makeup?? Nah, just use a follower.

Compound Role
    the editor knows about the interface, and adds a table under the Role ClassName.
    The currently selected role's properties are shown on the right of the table.
    This can be in ADDITION to the CompoundRole's properties.
Same feature for SceneDirector.

Create some tests for Views in the tests game.
    Create a Stage and view in the middle of the screen
    Add buttons which scroll the view
    Add a button inside it to test the offset
    Create a compound view in the middle with other views inside it.
        Use the same Stage for each of the mini views to test the 1:many Stage->View with mouse listeners and capture mouse.

Companion string names wont be renamed when a costume is renamed.
    Create a first class citizen "CompanionCostume"
    Get rid of old string based code.

Later
=====

GUIView.keyUp does nothing - is this ok?

Joystick input devices.

Multiline Text from the editor? Will need a text area component!

Read a file and display it on the screen
    In one multiline text
    In separate lines, with each delayed - use animations too.
    Markdown syntax - for links at least.

Optimise Explosion by using fixAppearance for projectiles which are turned, but won't rotate.
    maybe just add a fix boolean, and leave it up to the user to do it.

check all code for this.[a-z 0-9]*\(, and remove the "this".

Create a Compound Role, which has a ClassName array of other Roles
    It has one AbstractProperty, who's Component is a table with Add/Remove Up/Down buttons, and clicking on any row show the
    properties for that row.
        Get this working for Role, and maybe it could be made generic for Makeup too.
    
Add pose and nine patch : try to show the image sub directory if it exists.
    Copy images if outside of the game's directory
        Can do this during SAVE

BlitModes on Pose, so a "spotlight" can ADD

"Duplicate" button in Animation editor - maybe on Costume too.

Drag and drop to move and reorder animation in the editor.
    Replace the whole AnimationEditor with a timeline, where sequence are arranged left to right and parallel are stacked top to bottom.
    Test and edit are done in the same full screen editor - like scene designer.
    Add: Pick a pose, then place it on the world.
    A large time-line pane shows an overview of the animation. Dragging controls will change the tick or loops of the animation.
        Can fill the whole page, with the animation on top of it.
    Click at a point in the time-line to show that frame.
    Save the pose and start x,y, direction, heading with each animation ("test" tag)
    
Explanatory games
    e.g. Showing the different between heading and direction.
    
Create a game from scratch, deliberately making syntax errors in the code.
    Fix any bugs and improve the UI along the way. 

Catch all ScriptExceptions
    Report them to ScriptErrorLog, which will also write to stderr (not as a stack trace)
    An icon on the popup Layer shows when a new error has occurred. Click to open the log viewer.
        "Clear" button will remove the icon from the popup layer. 

Check that a broken script doesn't cause problems :
    Costume Properties
    Behaviour in editor
    Behaviour in designer
    SceneBehaviour in editor
    SceneBehaviour in designer
    Game

Later
=====

Simple convolution filter
    Filters don't need to be square.
    Create empty space around the image. Later give option of duping the image's edge.
    Apply the convolution matrix.
        For RGB, just apply the matrix to each channel in turn.
        For RGBA we'd need to change the final DIVIDE to discount transparent pixels. i.e divide by sub of matrix * alphas.
        Apply the matrix to alpha as normal.
        
   Many things just need the alpha channel convolved?
           
Look at rotozoom, and try to implement a generic affine transformation matrix???
    Calc size of dest
    Calc pos of corners
    Bresinem walk from translated top left to bottom left.
        Bres walk across the "row"
        Copy pixel.
    That only leaves the problem of blending.
        Instead of choosing one src pixel, we consider the rectangle from the source
            Where the rect is large, average multiple pixels
            Where the rect is small (less than 2x2 pixels), average parts of each pixel.

Should poses and animations be owned by Resources, or by Costume? Some are used by only one, and therefore is annoying to be in a
big horrible unorganised list.
    When editing a pose it has a "shared" tick box, which just toggles.
        Defaults to true when adding a pose via PosesEditor
        Defaults to false when adding via the CostumesEditor (if that gets written).
        When a pose is used by a second costume, it is also changed to true (must be done post-save).
    When listing Poses shows : all, shared or a single costume's. (via a picker button). Defaults to shared.
    Animation names are still unique, but default to costumename.x when added via costumeseditor. 
    If an unshared pose is removed from its costume, then it is deleted - only acceptable if shared is hidden from the user.
    CostumesEditor needs Add -> Pose, New Pose, Animation, New Animation etc.
    
    The "shared" tick box currently is useless, so either use it, or remove it.
    Add an "unused" filter, which lists poses not used by a Costume, and let them be deleted manually.
    
Same pattern for sounds and animations, not for font or nine patches.

Make the Costumes tab first (or second).


How about a Scripts tab
    List all scripts double click to edit.
    Show errors / Clear errors

A Gallery
    Import poses, costumes, fonts, animations etc from a set of "games" in the gallery, or from any
    other game's resources.

Is the special Map needed which allows scripted Costume properties to be retrieved from BeanHelper
    Now we have ScriptedObject, isn't it better to have it done that way?
    Would need a "set" version of the special code too.

Scripted Behaviours can't detect MouseEvents.
    The whole Layer as a MouseListener needs looking at.

"include" javascript function, which includes another script file.

Copy the arm binary
    Test Itchy on Pi

Text Costumes.
    Buttons can have sounds and animations

Compile on raspPi?

Get Thrust to run via "launch" without the resource symlinks to itchy.
    Need thrusts jar file to be in a lib directory within its resources, and for the jar to be loaded
    after java has started.

Bucket to be more transparent
Water looks naff

The stars on Drunk Invaders backgrounds should have more variation (alpha and slight colour - maybe size too).

Component : Override all rules. Currently only Font can be overridden.  
    Allow to be reset to default (i.e. be restyled). 

Create a game which uses the GUI        

The Behaviours should have the tags, because its them that have the Interface.
Also, I could change the behaviour, and the tags would magically vanish (without the "removeAll"!
Don't use tags for "active".

Container.render should get the NinePatches to render directly onto the gc, not via a temp surface.
RenderableInterface is rubbish. NinePatches should be told where and how large to draw themselves
   (assuming that they can render onto a existing surface rather than needing a new surface).

Replace crufty render and render2 methods with the concept of a Graphics Context.
To scroll, a sub-layer, push the context, alter its mapping, call the childrens render,
then pop the context.

Appearance optimised so that it doesn't need to re-render the appearance to get the worldRectangle
    Maybe calculate the maximum rectangle for the Pose for any rotation
    When asked for its worldRect, if cached, returned that, other wise if direction == 0, return pose.rectangle * scale, otherwise return maximum rect * scale   




























New Server
==========
Install debian onto the SSD.
Create a single partition 90% of the disk.

Get a spare drive, and format it with one large partition and three small ones.
The small ones will be for swap and /var/log and /tmp
The large one will be for /gidea (a subset)

Get the nvidia driver working
    https://wiki.debian.org/NvidiaGraphicsDrivers

Install all of the software onto root partition, except Myth

Make a backup of
    /gidea/projects
    /home/nick
    /home/nalin
    /gidea/music/ a small subset of default to test only
    /gidea/images

Set the computer name to be giddydom.healthy
And have /etc/hosts resolve giddyserv to localhost and old-giddyserv to 192.168.1.2

tar /etc /boot from real giddyserv and copy it over.

Get tomcat and apache working

Backup and copy over the mythdatabase and familyalbum database (others?)

Remove the old / partition from real giddyserv and replace it with SSD
This also contains /mythdata and /backup
Mount /giddyserv (raid array).

Install the double DVB card
Set up Myth - maybe moving the box down stairs for access to the aerial.

Backup the SSD, so that if it fails, I can get back to a good system quickly.


Firewall
Backup scripts
Website indexer (butchers)

