#!/bin/sh
//bin/true; exec java -Djava.library.path=native/`uname -m` -cp /usr/share/java/bsh.jar:itchy.jar:lib/jame.jar bsh.Interpreter "$0" "$@"

import uk.co.nickthecoder.itchy.*;
import uk.co.nickthecoder.itchy.util.*;
import uk.co.nickthecoder.jame.*;
import uk.co.nickthecoder.jame.event.*;

density = 1/3.0;
dropSpeed = 3.0;

dropSpeedDelta = 0.1;
densityDelta = 0.01;

background = new RGBA(0,0,0);

dropPng = "resources/rain/rain.png";
playerPng = "resources/rain/player.png";

public class RainGame extends Game
{
    public boolean onKeyDown( KeyboardEvent ke )
    {
        if (ke.symbol == Keys.ESCAPE) {
            terminate();
            return true;
        }
        return false;
    }

    public void tick()
    {
        int x = Util.randomBetween(0,640);
        int y = 500;
        drop = new Drop().createActor( dropImage, x, y, layer );
        drop.addTag( "deadly" );
        drop.activate();
        sleep( 1 / density / dropSpeed );
        
        density += densityDelta;
        dropSpeed += dropSpeedDelta;
    }

}

public class Player extends Behaviour
{
    public void tick()
    {
        if (itchy.isKeyDown(Keys.LEFT)) {
            actor.moveBy( -10, 0 );
        }
        if (itchy.isKeyDown(Keys.RIGHT)) {
            actor.moveBy( 10, 0 );
        }

        for (Actor other : touching( new String[] { "deadly" } ) ) {
            print( "You died" );
            game.terminate();
        }
        
    }
}


public class Drop extends Behaviour
{
    
    public void tick()
    {
        actor.moveBy( 0, - dropSpeed );
        if ( actor.getY() < -30 ) {
            actor.kill();
        }
    }
}

itchy = Itchy.singleton;
game = new RainGame();
itchy.init(game);

layer = new ScrollableLayer(new Rect(0, 0, 640, 480), background, false);
itchy.getGameLayer().add(layer);

dropImage = new ImagePose( dropPng );
playerImage = new ImagePose( playerPng );

player = new Player().createActor( playerImage, 320, 40, layer );
player.activate();

game.loop();

