#!/bin/sh
//bin/true; exec java -Djava.library.path=native/`uname -m` -cp /usr/share/java/bsh.jar:itchy.jar:lib/jame.jar bsh.Interpreter "$0" "$@"

import uk.co.nickthecoder.itchy.*;
import uk.co.nickthecoder.itchy.util.*;
import uk.co.nickthecoder.jame.*;
import uk.co.nickthecoder.jame.event.*;

public class RainGame extends Game
{
    delay = 0.5;
    
    public boolean onKeyDown( KeyboardEvent ke )
    {
        if (ke.symbol == Keys.ESCAPE) {
            terminate();
            return true;
        }
        return false;
    }

    public void tick()
    {
        int x = Util.randomBetween(0,640);
        int y = 500;
        drop = new Drop().createActor( dropImage, x, y, layer );
        drop.addTag( "deadly" );
        drop.activate();
        sleep( delay );
        delay = delay * 0.98;
        dropSpeed = dropSpeed * 1.01;
    }

}

public class Player extends Behaviour
{
    public void tick()
    {
        if (itchy.isKeyDown(Keys.LEFT)) {
            actor.moveBy( -10, 0 );
        }
        if (itchy.isKeyDown(Keys.RIGHT)) {
            actor.moveBy( 10, 0 );
        }
        for (Actor other : Actor.allByTag("deadly")) {

            if (actor.touching(other)) {
                print( "You died" );
                game.terminate();
            }
        }
    }
}

dropSpeed = -3;

public class Drop extends Behaviour
{
    
    public void tick()
    {
        actor.moveBy( 0, dropSpeed );
        if ( actor.getY() < -30 ) {
            actor.kill();
        }
    }
}

itchy = Itchy.singleton;

game = new RainGame();
itchy.init(game);

background = new RGBA(0,0,0);
layer = new ScrollableLayer(new Rect(0, 0, 640, 480), background, false);
itchy.getGameLayer().add(layer);

dropImage = new ImagePose( "resources/rain/rain.png" );
playerImage = new ImagePose( "resources/rain/player.png" );

player = new Player().createActor( playerImage, 320, 40, layer );
player.activate();

game.loop();

